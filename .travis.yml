# .travis.yaml
#
# This file is part of NEST.
#
# Copyright (C) 2004 The NEST Initiative
#
# NEST is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# NEST is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NEST.  If not, see <http://www.gnu.org/licenses/>.


# This is the Travis CI top-level script to setup and run the NEST build and test environment. 

language: python

# Using the container infrastructure for Ubuntu Trusty (14.04 LTS).
sudo: required
dist: trusty

#https://blog.travis-ci.com/2017-06-19-trusty-updates-2017-Q2
group: deprecated-2017Q2

python:
   - "2.7.13"
   - "3.6.0"
env:
  matrix:
    # We don't have to run a full matrix here, because most of the options are
    # independent. This means that we can test them together in the full build.
    # See also https://docs.travis-ci.com/user/caching/#Caches-and-build-matrices
    - xTHREADING=0 xMPI=0 xGSL=0 xLTDL=0 xREADLINE=0 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # minimal
    - xTHREADING=0 xMPI=1 xGSL=0 xLTDL=1 xREADLINE=1 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # only MPI
    - xTHREADING=1 xMPI=0 xGSL=0 xLTDL=1 xREADLINE=1 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # only threading
    - xTHREADING=1 xMPI=0 xGSL=0 xLTDL=0 xREADLINE=0 xPYTHON=1 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # Python & Threading
    - xTHREADING=0 xMPI=1 xGSL=0 xLTDL=0 xREADLINE=0 xPYTHON=1 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # Python & MPI
    - xTHREADING=0 xMPI=0 xGSL=0 xLTDL=0 xREADLINE=0 xPYTHON=1 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # only Python
    - xTHREADING=1 xMPI=1 xGSL=1 xLTDL=1 xREADLINE=1 xPYTHON=1 xMUSIC=1 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # full
  
matrix:
  # Notify immediately when a build job fails.
  fast_finish: true

addons:
   apt:
    sources:
     - r-packages-trusty
    packages:
     - build-essential
     - cmake
     - libltdl-dev
     - libreadline6-dev
     - libncurses5-dev 
     - libgsl0-dev
     - python-all-dev
     - python-numpy
     - python-scipy 
     - python-matplotlib
     - ipython
     - pkg-config
     - openmpi-bin
     - libopenmpi-dev
     - python-nose
     - libpcre3
     - libpcre3-dev
     - python-mpi4py
     - llvm-3.6-dev
cache:
   directory:
     - $HOME/.cache

before_install:
   - echo "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +"
   - echo "+         P R E P A R E   N E S T   B U I L D   E N V I R O N M E N T         +"
   - echo "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +"
   - export SOURCEDIR=$PWD
   - echo $PWD
   - cp music_install.sh $HOME
   - cd $HOME/build
   - echo $PATH
   - ls ~/virtualenv/python*.*.*/lib/python*.*
   - ls ~/virtualenv/python*.*/include/python*.*
  # Upgrade pip and setuptools
   - pip install -U pip
   - pip install -U setuptools
  
  # Install packages required by NEST.
  # (Please see also: http://www.nest-simulator.org/installation/#standard-configuration)
  # - pip install cython scipy matplotlib
  # Install package terminaltables required by parse_travis_log.py to create the build summary.
   - pip install terminaltables
  #Install Cython
   - pip install cython
  # Install nose framework for the Python testsuite.
  # - pip install nose

  # Install VERA++ and pep8 for static code analysis.
   - sudo apt-get install -y vera++
   - pip install pep8

  # Required for building cppcheck-1.69.
 # - sudo apt-get install -y libpcre3 libpcre3-dev

  # Build cppcheck version 1.79
   - git clone https://github.com/danmar/cppcheck.git
   - cd cppcheck
   - git checkout tags/1.79
   - mkdir -p install
   - make PREFIX=$HOME/.cache CFGDIR=$HOME/.cache/cfg HAVE_RULES=yes install
   - cd ..
 
  # Remove these directories, otherwise the copyright-header check will complain.
   - rm -rf ./cppcheck
  
  # Ensure that the cppcheck and clang-format installation can be found.
   - export PATH=$HOME/.cache/bin:$PATH

  # Install jq to process JSON output from GitHub API.
   - pip install jq
 #  - pip install mpi4py

install:
 #  - cd $HOME
#   - chmod +x music_install.sh
#   - ./music_install.sh
   - which cython
   - cython --version
   - which python
   - python --version
   - which pip
   - which cmake
   - cmake --version

before_script:
   - cd $SOURCEDIR
   - chmod +x build.sh
script:
   - set -o pipefail
   - ./build.sh 2>&1 | tee build.sh.log
   - python extras/parse_travis_log.py build.sh.log

before_deploy:
   - cd $TRAVIS_BUILD_DIR/build
   - tar -zcvf reports.tar.gz ./reports
   - tar -zcvf docs.tar.gz $TRAVIS_BUILD_DIR/result/share/doc/nest/*.*
   - mkdir -p $TRAVIS_BUILD_DIR/build/artefacts_upload
   - mv docs.tar.gz $TRAVIS_BUILD_DIR/build/artefacts_upload
   - mv reports.tar.gz $TRAVIS_BUILD_DIR/build/artefacts_upload

# S3 Deployment (Uploading the Travis CI build artefacts to Amazon S3).
deploy:
  provider: s3
  access_key_id:
    secure: $ARTIFACTS_KEY
  secret_access_key:
    secure: $ARTIFACTS_SECRET
  bucket: "nest-travis-artefacts"
  region: eu-central-1
  skip_cleanup: true
  on:
    repo: nest/nest-simulator
    branch: master
  local-dir: "$TRAVIS_BUILD_DIR/build/artefacts_upload"
  upload-dir: "$TRAVIS_REPO_SLUG/$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER"
  acl: bucket_owner_full_control
